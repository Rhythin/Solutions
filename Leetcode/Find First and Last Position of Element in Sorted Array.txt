class Solution {
    public int[] searchRange(int[] nums, int target) {
        int ans[]=new int[2];
        ans[0]=firstOccurance(nums,target);
        ans[1]=lastOccurance(nums,target);
        return ans;
    }
    int firstOccurance(int nums[],int target){
        int left=0,right=nums.length-1;
        while(left<=right){
            int mid=(left+right)/2;
            if(nums[mid]==target){
                if(mid==0 || nums[mid-1]<target)return mid;
                right=mid-1;
            } 
            else if(nums[mid]<target)left=mid+1;
            else if(nums[mid]>target)right=mid-1;
            
        }
        return -1;
    }
    int lastOccurance(int nums[],int target){
        int left=0,right=nums.length-1;
        while(left<=right){
            int mid=(left+right)/2;
            if(nums[mid]==target){
                if(mid==nums.length-1 || nums[mid+1]>target) return mid;
                left=mid+1;
            }
            else if(nums[mid]<target)left=mid+1;
            else if(nums[mid]>target)right=mid-1;
            
        }
        return -1;
    }
}